name: Build on release

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: actionfile-linux-amd64-${{ github.event.release.tag_name }}
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: actionfile-windows-amd64-${{ github.event.release.tag_name }}.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: actionfile-darwin-amd64-${{ github.event.release.tag_name }}
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: actionfile-darwin-arm64-${{ github.event.release.tag_name }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/actionfile.exe release/${{ matrix.artifact_name }}
          else
            cp target/${{ matrix.target }}/release/actionfile release/${{ matrix.artifact_name }}
            chmod +x release/${{ matrix.artifact_name }}
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: release/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
